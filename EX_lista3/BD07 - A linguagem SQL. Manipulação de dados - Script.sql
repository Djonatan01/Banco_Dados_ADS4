--CREATE TABLE ALUNO (
--	RA INT NOT NULL,
--	NOME NVARCHAR(250),
--	EMAIL NVARCHAR(150),
--	TELEFONE NVARCHAR(50),
--	CONSTRAINT PK_ALUNO PRIMARY KEY (RA)
--)

--INSERT INTO ALUNO (RA, NOME, EMAIL, TELEFONE)
--VALUES (123, 'WARNER BREZOLIN', 
--'WBREZOLIN@GMAIL.COM', '12 981153679')

--INSERT INTO ALUNO (RA, NOME, EMAIL)
--VALUES (124, 'GABRIEL', 
--'GABRIEL@GMAIL.COM')


--UPDATE ALUNO SET TELEFONE='12 981153679'
--WHERE RA=123

--SELECT * FROM ALUNO
--WHERE RA=123

--INSERT INTO ALUNO (RA, NOME, EMAIL)
--VALUES (124, 'GABRIEL', 
--'GABRIEL@GMAIL.COM')


--UPDATE ALUNO SET EMAIL='MICHAEL_PAI@GMAIL.COM'
--WHERE NOME LIKE 'MICHAEL%'

--SELECT * FROM ALUNO
--WHERE NOME LIKE 'MICHAEL%'

--DELETE FROM ALUNO WHERE RA=128


--DROP TABLE ALUNO




SELECT * FROM ALUNO

CREATE TABLE PESSOAS (
	NOME NVARCHAR(250),
	TELEFONE NVARCHAR(50))

INSERT INTO PESSOAS (NOME, TELEFONE)
SELECT NOME, TELEFONE FROM ALUNO
WHERE NOME LIKE 'MICHAEL%'




SELECT EMAIL 
FROM ALUNO
GROUP BY EMAIL

SELECT RA AS MATRICULA, NOME AS ALUNO,
EMAIL AS CORREIO_ELETRONICO, TELEFONE
FROM ALUNO

CREATE TABLE CURSO (
	CODCURSO INT NOT NULL PRIMARY KEY,
	NOME NVARCHAR(200)
)

INSERT INTO CURSO (CODCURSO, NOME)
VALUES (2, 'DIREITO')

CREATE TABLE MATRICULA (
	CODMAT INT NOT NULL PRIMARY KEY,
	RA INT,
	CODCURSO INT,
CONSTRAINT FK_RA FOREIGN KEY (RA) references ALUNO(RA),
CONSTRAINT FK_CC FOREIGN KEY (CODCURSO) references CURSO(CODCURSO)
)


INSERT INTO MATRICULA (CODMAT, RA, CODCURSO)
VALUES (5, 127, 2)

SELECT ALUNO.RA, ALUNO.NOME AS ALUNO, CURSO.NOME AS CURSO
FROM ALUNO, MATRICULA, CURSO 
WHERE ALUNO.RA=MATRICULA.RA 
AND CURSO.CODCURSO=MATRICULA.CODCURSO
--AND CURSO.CODCURSO=2
ORDER BY CURSO.NOME DESC, ALUNO.NOME

SELECT * FROM MATRICULA

SELECT A.NOME AS CURSO, COUNT(B.RA)
FROM CURSO A, MATRICULA B
WHERE A.CODCURSO=B.CODCURSO
GROUP BY A.NOME

SELECT * FROM ALUNO WHERE NOME LIKE '%L%'

SELECT * FROM ALUNO WHERE RA IN (123, 124, 133)

SELECT * FROM ALUNO WHERE RA=123 OR NOME LIKE 'G%'

SELECT * FROM ALUNO WHERE NOT RA=123

SELECT * FROM ALUNO WHERE RA NOT IN (123, 124, 133)

SELECT * FROM ALUNO WHERE NOME NOT LIKE '%M%'

SELECT * FROM ALUNO WHERE RA<>123


SELECT * FROM ALUNO WHERE TELEFONE IS NOT NULL


SELECT * FROM ALUNO WHERE RA>=126 AND RA<=130

SELECT * FROM ALUNO WHERE RA BETWEEN 126 AND 130


select top 3 ra, nome from aluno
where nome like 'mi%'
order by nome


select avg(ra) from aluno 



insert into curso (codcurso, nome) values
(3, 'FILOSOFIA')



SELECT A.NOME AS CURSO, COUNT(B.RA) AS TOTAL_ALUNOS
FROM CURSO A, MATRICULA B
WHERE A.CODCURSO=B.CODCURSO
GROUP BY A.NOME
HAVING COUNT(B.RA) > 1
ORDER BY 2 DESC

INSERT INTO MATRICULA (CODMAT, RA, CODCURSO)
VALUES (8, 132, 2)

SELECT A.NOME AS CURSO, COUNT(B.RA) AS TOTAL_ALUNOS,
CASE
	WHEN COUNT(B.RA) >= 5 THEN 'ABRE CURSO'
	WHEN COUNT(B.RA) <= 3 THEN 'NÃO ABRE CURSO'
	ELSE 'ESTÁ QUASE LÁ' END
FROM CURSO A, MATRICULA B
WHERE A.CODCURSO=B.CODCURSO
GROUP BY A.NOME
ORDER BY 2 DESC


SELECT 
CASE
	WHEN B.RA = 123 THEN 'LANCAMENTO BAIXADO'
	WHEN B.RA = 124 THEN 'LANCAMENTO EM ABERTO'
	WHEN B.RA = 125 THEN 'LANCAMENTO CANCELADO'
	ELSE 'STATUS NÃO RECONHECIDO'
	END AS STATUS
FROM ALUNO B
